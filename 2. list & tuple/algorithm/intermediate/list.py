# 알고리즘
# 알고리즘 개요
# 알고리즘이란? 유한한 단계를 통해 문제를 해결하기 위한 절차나 방법
# 컴퓨터가 어떤 일을 수행하기 위한 단계적 방법, 어떠한 문제를 해결하기 위한 절차

# 알고리즘의 성능 분석
# 무엇이 좋은 알고리즘인가?
# 정확성 : 얼마나 정확하게 동작하는가? 
# 작업량 : 얼마나 적은 연산으로 원하는 결과를 얻어내는가?
# 메모리 사용량: 얼마나 적은 메모리를 사용하는가?
# 단순성 : 얼마나 단순한가?
# 최적성 : 더 이상 개선할 여지 없이 최적화 되었는가?

# 많은 문제에서 알고리즘의 성능 분석 기준으로 알고리즘의 작업량을 비교
# ex) 1 ~ 100까지의 합을 구하는 문제
# 1) 1부터 100까지의 숫자를 하나 씩 더한다. => 덧셈 99번
# 2) 등차수열의 합 공식을 이용한다 => 덧셈 1번, 곱셈 1번, 나눗셈 1번

# 알고리즘의 작업량을 표현할 때, 시간복잡도라는 개념을 사용
# 실제 걸리는 시간을 측정
# 실행되는 명령문의 개수를 계산 <- 많이 사용됨

# 시간복잡도는 빅-오 표기법을 통해 나타냄
# 시간 복잡도 함수 중에서 가장 큰 영향력을 주는 n에 대한 항만을 표시
# 계수는 생략하여 표시
# ex) O(2n+1) = O(2n) = O(n)
# ex) O(4) = O(1)



### List ###
# 파이썬
# 실행시마다 소스를 기계어로 번역하는 인터프리터 언어
# 객체 지향 언어
# 하드웨어 성능이 좋지 않던 시기에는 프로그램 실행 속도에 관심, 그러나 하드웨어의 성능 개선으로 실행 속도의 차이가 크지 않음
# 파이썬의 모든 자료는 객체
# 변수에 값을 초기화 시 변수가 메모리에 생성됨

# Exhaustive Search

# Greedy Algorithm

# Sort





